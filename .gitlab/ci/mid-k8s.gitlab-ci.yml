include:
  - local: "/.gitlab/ci/common.gitlab-ci.yml"

.mid_k8s_on_demand:
  tags:
    - k8srunner
    - ska-k8s
  stage: on_demand_k8s
  extends:
    - .mid
  variables:
    VALUES: "values.yml"
    INGRESS_HOST: "INGRESS.IP.ADDRESS"
    SERVICE_ACCOUNT: "ci-svc-fhs-sys-tests-$CI_PIPELINE_ID"

mid-k8s-on-demand-deploy:
  extends:
    - .deploy
    - .mid_k8s_on_demand
  rules:
    - if: $TARGET_SITE == "psi"
      when: never  
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - if: $CI_PIPELINE_SOURCE != "schedule"
      when: manual
  before_script:
    - export KUBE_NAMESPACE="ci-ska-mid-cbf-fhs-system-tests-1470830171-jwambackmda"
    - make k8s-delete-namespace
    - |
      if [[ $(kubectl get namespaces | grep ci-$CI_PROJECT_NAME) ]]; then
        echo "There is already a ci-$CI_PROJECT_NAME namespace deployed, please delete it before deploying a new one!"
        exit 1
      else
        echo "There is no ci-$CI_PROJECT_NAME namespace deployed, let's do it!"
      fi
  allow_failure: true
  environment:
    name: mid-k8s/ska-$CI_COMMIT_REF_NAME

mid-k8s-on-demand-info:
  extends:
    - .info
    - .mid_k8s_on_demand
  rules:
    - if: $TARGET_SITE == "psi"
      when: never
    - when: manual
  allow_failure: true

mid-k8s-on-demand-destroy:
  extends:
    - .info
    - .mid_k8s_on_demand
  rules:
    - if: $TARGET_SITE == "psi"
      when: never
    - when: manual
  
  script:
    - export KUBE_NAMESPACE=$(echo "ci-$CI_PROJECT_NAME-$CI_PIPELINE_ID-$GITLAB_USER_LOGIN" | tr '[:upper:]' '[:lower:]')
    - make k8s-uninstall-chart
    - make k8s-delete-namespace
  allow_failure: true

mid-k8s-destroy:
  stage: cleanup
  extends:
    - .cleanup
    - .mid_k8s_on_demand
  needs:
    - log-collector
  rules:
    - if: $TARGET_SITE == "psi"
      when: never
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: delayed
      start_in: 1 hour
    - if: $CI_PIPELINE_SOURCE != "schedule"
      when: delayed
      start_in: 1 hour
  environment:
    name: mid-k8s/ska-$CI_COMMIT_REF_NAME
    action: stop
